# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/leptonica
pkgincludedir = $(includedir)/leptonica
pkglibdir = $(libdir)/leptonica
pkglibexecdir = $(libexecdir)/leptonica
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(pkginclude_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config_auto.h
CONFIG_CLEAN_FILES = endianness.h
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
liblept_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_liblept_la_OBJECTS = adaptmap.lo affine.lo affinecompose.lo \
	arrayaccess.lo bardecode.lo baseline.lo bbuffer.lo \
	bilateral.lo bilinear.lo binarize.lo binexpand.lo binreduce.lo \
	blend.lo bmf.lo bmpio.lo bmpiostub.lo bootnumgen1.lo \
	bootnumgen2.lo bootnumgen3.lo bootnumgen4.lo boxbasic.lo \
	boxfunc1.lo boxfunc2.lo boxfunc3.lo boxfunc4.lo boxfunc5.lo \
	bytearray.lo ccbord.lo ccthin.lo classapp.lo colorcontent.lo \
	coloring.lo colormap.lo colormorph.lo colorquant1.lo \
	colorquant2.lo colorseg.lo colorspace.lo compare.lo \
	conncomp.lo convertfiles.lo convolve.lo correlscore.lo \
	dewarp1.lo dewarp2.lo dewarp3.lo dewarp4.lo dnabasic.lo \
	dnafunc1.lo dnahash.lo dwacomb.2.lo dwacomblow.2.lo edge.lo \
	encoding.lo enhance.lo fhmtauto.lo fhmtgen.1.lo \
	fhmtgenlow.1.lo finditalic.lo flipdetect.lo fliphmtgen.lo \
	fmorphauto.lo fmorphgen.1.lo fmorphgenlow.1.lo fpix1.lo \
	fpix2.lo gifio.lo gifiostub.lo gplot.lo graphics.lo \
	graymorph.lo grayquant.lo heap.lo jbclass.lo jp2kheader.lo \
	jp2kheaderstub.lo jp2kio.lo jp2kiostub.lo jpegio.lo \
	jpegiostub.lo kernel.lo leptwin.lo libversions.lo list.lo \
	map.lo maze.lo morph.lo morphapp.lo morphdwa.lo morphseq.lo \
	numabasic.lo numafunc1.lo numafunc2.lo pageseg.lo paintcmap.lo \
	parseprotos.lo partition.lo pdfio1.lo pdfio1stub.lo pdfio2.lo \
	pdfio2stub.lo pix1.lo pix2.lo pix3.lo pix4.lo pix5.lo \
	pixabasic.lo pixacc.lo pixafunc1.lo pixafunc2.lo pixalloc.lo \
	pixarith.lo pixcomp.lo pixconv.lo pixlabel.lo pixtiling.lo \
	pngio.lo pngiostub.lo pnmio.lo pnmiostub.lo projective.lo \
	psio1.lo psio1stub.lo psio2.lo psio2stub.lo ptabasic.lo \
	ptafunc1.lo ptafunc2.lo ptra.lo quadtree.lo queue.lo rank.lo \
	rbtree.lo readbarcode.lo readfile.lo recogbasic.lo recogdid.lo \
	recogident.lo recogtrain.lo regutils.lo rop.lo roplow.lo \
	rotate.lo rotateam.lo rotateorth.lo rotateshear.lo \
	runlength.lo sarray1.lo sarray2.lo scale1.lo scale2.lo \
	seedfill.lo sel1.lo sel2.lo selgen.lo shear.lo skew.lo \
	spixio.lo stack.lo stringcode.lo strokes.lo sudoku.lo \
	textops.lo tiffio.lo tiffiostub.lo utils1.lo utils2.lo \
	warper.lo watershed.lo webpio.lo webpiostub.lo writefile.lo \
	zlibmem.lo zlibmemstub.lo
liblept_la_OBJECTS = $(am_liblept_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
liblept_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(liblept_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liblept_la_SOURCES)
DIST_SOURCES = $(liblept_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(pkginclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/endianness.h.in \
	$(top_srcdir)/config/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
APPLE_UNIVERSAL_BUILD = 0
AR = ar
AUTOCONF = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/missing autoconf
AUTOHEADER = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/missing autoheader
AUTOMAKE = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENDIANNESS = L_LITTLE_ENDIAN
EXEEXT = 
FGREP = /bin/grep -F
GDI_LIBS = 
GIFLIB_LIBS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JPEG_CFLAGS = 
JPEG_LIBS = -ljpeg
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,--as-needed 
LIBJP2K_CFLAGS = 
LIBJP2K_LIBS = 
LIBM = -lm
LIBOBJS = 
LIBPNG_CFLAGS = -I/usr/include/libpng12
LIBPNG_LIBS = -lpng12
LIBS = 
LIBTIFF_CFLAGS = -I/usr/include/x86_64-linux-gnu
LIBTIFF_LIBS = -ltiff
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBWEBP_CFLAGS = 
LIBWEBP_LIBS = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = leptonica
PACKAGE_BUGREPORT = 
PACKAGE_NAME = leptonica
PACKAGE_STRING = leptonica 1.78.0
PACKAGE_TARNAME = leptonica
PACKAGE_URL = 
PACKAGE_VERSION = 1.78.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 1.78.0
ZLIB_CFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/ubuntu/codebases/mathpx/leptonica-1.78.0/src
abs_srcdir = /home/ubuntu/codebases/mathpx/leptonica-1.78.0/src
abs_top_builddir = /home/ubuntu/codebases/mathpx/leptonica-1.78.0
abs_top_srcdir = /home/ubuntu/codebases/mathpx/leptonica-1.78.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ubuntu/codebases/mathpx/leptonica-1.78.0/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CFLAGS = $(DEBUG_FLAGS)
AM_CPPFLAGS = $(ZLIB_CFLAGS) $(LIBPNG_CFLAGS) $(JPEG_CFLAGS) $(LIBTIFF_CFLAGS) $(LIBWEBP_CFLAGS) $(LIBJP2K_CFLAGS)
lib_LTLIBRARIES = liblept.la
liblept_la_LIBADD = $(LIBPNG_LIBS) $(JPEG_LIBS) $(GIFLIB_LIBS) $(LIBTIFF_LIBS) $(LIBWEBP_LIBS) $(LIBJP2K_LIBS) $(GDI_LIBS) $(LIBM) $(ZLIB_LIBS)
liblept_la_LDFLAGS = -no-undefined -version-info 5:3:0
liblept_la_SOURCES = adaptmap.c affine.c                        \
 affinecompose.c arrayaccess.c                                  \
 bardecode.c baseline.c bbuffer.c                               \
 bilateral.c bilinear.c binarize.c                              \
 binexpand.c binreduce.c                                        \
 blend.c bmf.c bmpio.c bmpiostub.c                              \
 bootnumgen1.c bootnumgen2.c                                    \
 bootnumgen3.c bootnumgen4.c                                    \
 boxbasic.c boxfunc1.c boxfunc2.c boxfunc3.c                    \
 boxfunc4.c boxfunc5.c bytearray.c                              \
 ccbord.c ccthin.c classapp.c                                   \
 colorcontent.c coloring.c                                      \
 colormap.c colormorph.c	                                \
 colorquant1.c colorquant2.c                                    \
 colorseg.c colorspace.c                                        \
 compare.c conncomp.c convertfiles.c                            \
 convolve.c correlscore.c                                       \
 dewarp1.c dewarp2.c dewarp3.c dewarp4.c                        \
 dnabasic.c dnafunc1.c dnahash.c                                \
 dwacomb.2.c dwacomblow.2.c                                     \
 edge.c encoding.c enhance.c                                    \
 fhmtauto.c fhmtgen.1.c fhmtgenlow.1.c			        \
 finditalic.c flipdetect.c fliphmtgen.c                         \
 fmorphauto.c fmorphgen.1.c fmorphgenlow.1.c                    \
 fpix1.c fpix2.c gifio.c gifiostub.c                            \
 gplot.c graphics.c graymorph.c                                 \
 grayquant.c heap.c jbclass.c                                   \
 jp2kheader.c jp2kheaderstub.c                                  \
 jp2kio.c jp2kiostub.c jpegio.c jpegiostub.c                    \
 kernel.c leptwin.c libversions.c list.c map.c maze.c           \
 morph.c morphapp.c morphdwa.c morphseq.c                       \
 numabasic.c numafunc1.c numafunc2.c                            \
 pageseg.c paintcmap.c                                          \
 parseprotos.c partition.c                                      \
 pdfio1.c pdfio1stub.c pdfio2.c pdfio2stub.c                    \
 pix1.c pix2.c pix3.c pix4.c pix5.c                             \
 pixabasic.c pixacc.c pixafunc1.c pixafunc2.c                   \
 pixalloc.c pixarith.c pixcomp.c pixconv.c	                \
 pixlabel.c pixtiling.c pngio.c pngiostub.c                     \
 pnmio.c pnmiostub.c projective.c	                        \
 psio1.c psio1stub.c psio2.c psio2stub.c                        \
 ptabasic.c ptafunc1.c ptafunc2.c ptra.c	                \
 quadtree.c queue.c rank.c rbtree.c                             \
 readbarcode.c readfile.c                                       \
 recogbasic.c recogdid.c recogident.c                           \
 recogtrain.c regutils.c                                        \
 rop.c roplow.c                                                 \
 rotate.c rotateam.c rotateorth.c rotateshear.c                 \
 runlength.c sarray1.c sarray2.c                                \
 scale1.c scale2.c seedfill.c                                   \
 sel1.c sel2.c selgen.c                                         \
 shear.c skew.c	spixio.c                                        \
 stack.c stringcode.c                                           \
 strokes.c sudoku.c textops.c                                   \
 tiffio.c tiffiostub.c 		                                \
 utils1.c utils2.c warper.c watershed.c                         \
 webpio.c webpiostub.c		                                \
 writefile.c zlibmem.c zlibmemstub.c

pkginclude_HEADERS = allheaders.h alltypes.h                    \
 array.h arrayaccess.h bbuffer.h bilateral.h                    \
 bmf.h bmfdata.h bmp.h ccbord.h                                 \
 dewarp.h endianness.h environ.h		                \
 gplot.h heap.h imageio.h jbclass.h                             \
 leptwin.h list.h	                                        \
 morph.h pix.h ptra.h queue.h rbtree.h                          \
 readbarcode.h recog.h regutils.h stack.h                       \
 stringcode.h sudoku.h watershed.h

LDADD = liblept.la
EXTRA_DIST = hmttemplate1.txt hmttemplate2.txt                  \
 leptonica-license.txt		                                \
 morphtemplate1.txt morphtemplate2.txt                          \
 stringtemplate1.txt stringtemplate2.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
endianness.h: $(top_builddir)/config.status $(srcdir)/endianness.h.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

liblept.la: $(liblept_la_OBJECTS) $(liblept_la_DEPENDENCIES) $(EXTRA_liblept_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(liblept_la_LINK) -rpath $(libdir) $(liblept_la_OBJECTS) $(liblept_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/adaptmap.Plo
include ./$(DEPDIR)/affine.Plo
include ./$(DEPDIR)/affinecompose.Plo
include ./$(DEPDIR)/arrayaccess.Plo
include ./$(DEPDIR)/bardecode.Plo
include ./$(DEPDIR)/baseline.Plo
include ./$(DEPDIR)/bbuffer.Plo
include ./$(DEPDIR)/bilateral.Plo
include ./$(DEPDIR)/bilinear.Plo
include ./$(DEPDIR)/binarize.Plo
include ./$(DEPDIR)/binexpand.Plo
include ./$(DEPDIR)/binreduce.Plo
include ./$(DEPDIR)/blend.Plo
include ./$(DEPDIR)/bmf.Plo
include ./$(DEPDIR)/bmpio.Plo
include ./$(DEPDIR)/bmpiostub.Plo
include ./$(DEPDIR)/bootnumgen1.Plo
include ./$(DEPDIR)/bootnumgen2.Plo
include ./$(DEPDIR)/bootnumgen3.Plo
include ./$(DEPDIR)/bootnumgen4.Plo
include ./$(DEPDIR)/boxbasic.Plo
include ./$(DEPDIR)/boxfunc1.Plo
include ./$(DEPDIR)/boxfunc2.Plo
include ./$(DEPDIR)/boxfunc3.Plo
include ./$(DEPDIR)/boxfunc4.Plo
include ./$(DEPDIR)/boxfunc5.Plo
include ./$(DEPDIR)/bytearray.Plo
include ./$(DEPDIR)/ccbord.Plo
include ./$(DEPDIR)/ccthin.Plo
include ./$(DEPDIR)/classapp.Plo
include ./$(DEPDIR)/colorcontent.Plo
include ./$(DEPDIR)/coloring.Plo
include ./$(DEPDIR)/colormap.Plo
include ./$(DEPDIR)/colormorph.Plo
include ./$(DEPDIR)/colorquant1.Plo
include ./$(DEPDIR)/colorquant2.Plo
include ./$(DEPDIR)/colorseg.Plo
include ./$(DEPDIR)/colorspace.Plo
include ./$(DEPDIR)/compare.Plo
include ./$(DEPDIR)/conncomp.Plo
include ./$(DEPDIR)/convertfiles.Plo
include ./$(DEPDIR)/convolve.Plo
include ./$(DEPDIR)/correlscore.Plo
include ./$(DEPDIR)/dewarp1.Plo
include ./$(DEPDIR)/dewarp2.Plo
include ./$(DEPDIR)/dewarp3.Plo
include ./$(DEPDIR)/dewarp4.Plo
include ./$(DEPDIR)/dnabasic.Plo
include ./$(DEPDIR)/dnafunc1.Plo
include ./$(DEPDIR)/dnahash.Plo
include ./$(DEPDIR)/dwacomb.2.Plo
include ./$(DEPDIR)/dwacomblow.2.Plo
include ./$(DEPDIR)/edge.Plo
include ./$(DEPDIR)/encoding.Plo
include ./$(DEPDIR)/enhance.Plo
include ./$(DEPDIR)/fhmtauto.Plo
include ./$(DEPDIR)/fhmtgen.1.Plo
include ./$(DEPDIR)/fhmtgenlow.1.Plo
include ./$(DEPDIR)/finditalic.Plo
include ./$(DEPDIR)/flipdetect.Plo
include ./$(DEPDIR)/fliphmtgen.Plo
include ./$(DEPDIR)/fmorphauto.Plo
include ./$(DEPDIR)/fmorphgen.1.Plo
include ./$(DEPDIR)/fmorphgenlow.1.Plo
include ./$(DEPDIR)/fpix1.Plo
include ./$(DEPDIR)/fpix2.Plo
include ./$(DEPDIR)/gifio.Plo
include ./$(DEPDIR)/gifiostub.Plo
include ./$(DEPDIR)/gplot.Plo
include ./$(DEPDIR)/graphics.Plo
include ./$(DEPDIR)/graymorph.Plo
include ./$(DEPDIR)/grayquant.Plo
include ./$(DEPDIR)/heap.Plo
include ./$(DEPDIR)/jbclass.Plo
include ./$(DEPDIR)/jp2kheader.Plo
include ./$(DEPDIR)/jp2kheaderstub.Plo
include ./$(DEPDIR)/jp2kio.Plo
include ./$(DEPDIR)/jp2kiostub.Plo
include ./$(DEPDIR)/jpegio.Plo
include ./$(DEPDIR)/jpegiostub.Plo
include ./$(DEPDIR)/kernel.Plo
include ./$(DEPDIR)/leptwin.Plo
include ./$(DEPDIR)/libversions.Plo
include ./$(DEPDIR)/list.Plo
include ./$(DEPDIR)/map.Plo
include ./$(DEPDIR)/maze.Plo
include ./$(DEPDIR)/morph.Plo
include ./$(DEPDIR)/morphapp.Plo
include ./$(DEPDIR)/morphdwa.Plo
include ./$(DEPDIR)/morphseq.Plo
include ./$(DEPDIR)/numabasic.Plo
include ./$(DEPDIR)/numafunc1.Plo
include ./$(DEPDIR)/numafunc2.Plo
include ./$(DEPDIR)/pageseg.Plo
include ./$(DEPDIR)/paintcmap.Plo
include ./$(DEPDIR)/parseprotos.Plo
include ./$(DEPDIR)/partition.Plo
include ./$(DEPDIR)/pdfio1.Plo
include ./$(DEPDIR)/pdfio1stub.Plo
include ./$(DEPDIR)/pdfio2.Plo
include ./$(DEPDIR)/pdfio2stub.Plo
include ./$(DEPDIR)/pix1.Plo
include ./$(DEPDIR)/pix2.Plo
include ./$(DEPDIR)/pix3.Plo
include ./$(DEPDIR)/pix4.Plo
include ./$(DEPDIR)/pix5.Plo
include ./$(DEPDIR)/pixabasic.Plo
include ./$(DEPDIR)/pixacc.Plo
include ./$(DEPDIR)/pixafunc1.Plo
include ./$(DEPDIR)/pixafunc2.Plo
include ./$(DEPDIR)/pixalloc.Plo
include ./$(DEPDIR)/pixarith.Plo
include ./$(DEPDIR)/pixcomp.Plo
include ./$(DEPDIR)/pixconv.Plo
include ./$(DEPDIR)/pixlabel.Plo
include ./$(DEPDIR)/pixtiling.Plo
include ./$(DEPDIR)/pngio.Plo
include ./$(DEPDIR)/pngiostub.Plo
include ./$(DEPDIR)/pnmio.Plo
include ./$(DEPDIR)/pnmiostub.Plo
include ./$(DEPDIR)/projective.Plo
include ./$(DEPDIR)/psio1.Plo
include ./$(DEPDIR)/psio1stub.Plo
include ./$(DEPDIR)/psio2.Plo
include ./$(DEPDIR)/psio2stub.Plo
include ./$(DEPDIR)/ptabasic.Plo
include ./$(DEPDIR)/ptafunc1.Plo
include ./$(DEPDIR)/ptafunc2.Plo
include ./$(DEPDIR)/ptra.Plo
include ./$(DEPDIR)/quadtree.Plo
include ./$(DEPDIR)/queue.Plo
include ./$(DEPDIR)/rank.Plo
include ./$(DEPDIR)/rbtree.Plo
include ./$(DEPDIR)/readbarcode.Plo
include ./$(DEPDIR)/readfile.Plo
include ./$(DEPDIR)/recogbasic.Plo
include ./$(DEPDIR)/recogdid.Plo
include ./$(DEPDIR)/recogident.Plo
include ./$(DEPDIR)/recogtrain.Plo
include ./$(DEPDIR)/regutils.Plo
include ./$(DEPDIR)/rop.Plo
include ./$(DEPDIR)/roplow.Plo
include ./$(DEPDIR)/rotate.Plo
include ./$(DEPDIR)/rotateam.Plo
include ./$(DEPDIR)/rotateorth.Plo
include ./$(DEPDIR)/rotateshear.Plo
include ./$(DEPDIR)/runlength.Plo
include ./$(DEPDIR)/sarray1.Plo
include ./$(DEPDIR)/sarray2.Plo
include ./$(DEPDIR)/scale1.Plo
include ./$(DEPDIR)/scale2.Plo
include ./$(DEPDIR)/seedfill.Plo
include ./$(DEPDIR)/sel1.Plo
include ./$(DEPDIR)/sel2.Plo
include ./$(DEPDIR)/selgen.Plo
include ./$(DEPDIR)/shear.Plo
include ./$(DEPDIR)/skew.Plo
include ./$(DEPDIR)/spixio.Plo
include ./$(DEPDIR)/stack.Plo
include ./$(DEPDIR)/stringcode.Plo
include ./$(DEPDIR)/strokes.Plo
include ./$(DEPDIR)/sudoku.Plo
include ./$(DEPDIR)/textops.Plo
include ./$(DEPDIR)/tiffio.Plo
include ./$(DEPDIR)/tiffiostub.Plo
include ./$(DEPDIR)/utils1.Plo
include ./$(DEPDIR)/utils2.Plo
include ./$(DEPDIR)/warper.Plo
include ./$(DEPDIR)/watershed.Plo
include ./$(DEPDIR)/webpio.Plo
include ./$(DEPDIR)/webpiostub.Plo
include ./$(DEPDIR)/writefile.Plo
include ./$(DEPDIR)/zlibmem.Plo
include ./$(DEPDIR)/zlibmemstub.Plo

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-pkgincludeHEADERS: $(pkginclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgincludedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pkgincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(pkgincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(pkgincludedir)" || exit $$?; \
	done

uninstall-pkgincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(pkginclude_HEADERS)'; test -n "$(pkgincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pkgincludedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-pkgincludeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-pkgincludeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool cscopelist-am ctags \
	ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-pkgincludeHEADERS install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-libLTLIBRARIES \
	uninstall-pkgincludeHEADERS

.PRECIOUS: Makefile


$(top_builddir)/prog/xtractprotos$(EXEEXT): liblept.la
	$(MAKE) -C $(top_builddir)/prog xtractprotos$(EXEEXT)

allheaders: $(top_builddir)/prog/xtractprotos$(EXEEXT) $(liblept_la_SOURCES)
	cd $(srcdir) && $(abs_top_builddir)/prog/xtractprotos$(EXEEXT) -prestring=LEPT_DLL -protos=inline $(liblept_la_SOURCES)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
